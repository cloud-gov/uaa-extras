---
jobs:

- name: set-self
  plan:
  - get: cg-uaa-extras-app
    trigger: true
  - set_pipeline: self
    file: cg-uaa-extras-app/ci/pipeline.yml

- name: unittests
  plan:
  - get: general-task
  - get: dotgov-domain-data
    trigger: true
  - get: cg-uaa-extras-app
    passed: [set-self]
    trigger: true
  - task: integrate-repos
    image: general-task
    file: cg-uaa-extras-app/ci/integrate.yml
  - task: test
    image: general-task
    input_mapping:
      cg-uaa-extras-app: uaa-extras-integrated
    file: cg-uaa-extras-app/ci/test.yml


- name: deploy-development
  plan:
  - get: general-task
  - get: dotgov-domain-data
    trigger: true
  - get: cg-uaa-extras-app
    passed: [unittests]
    trigger: true
  - task: integrate-repos
    image: general-task
    file: cg-uaa-extras-app/ci/integrate.yml
  - put: create-db
    resource: cf-cli-dev
    params: &db-params
      command: create-service
      update_service: true
      wait_for_service: true
      timeout: 1200
      service_instance: redis-accounts-aws
      service: aws-elasticache-redis
      plan: redis-3node
  - put: cloud-gov-development
    params:
      manifest: cg-uaa-extras-app/manifest_uaaextra.yml
      path: uaa-extras-integrated
      vars:
        domain: dev.us-gov-west-1.aws-us-gov.cloud.gov
      environment_variables:
        UAA_BASE_URL: ((uaa-base-url-development))
        UAA_CLIENT_ID: uaa_extras_app
        UAA_CLIENT_SECRET: ((uaa-client-secret-development))
        UAA_VERIFY_TLS: "true"
        UAADB_CONNECTION_STRING: ((uaadb-connection-string-development))
        SMTP_HOST: ((smtp-host))
        SMTP_PORT: ((smtp-port))
        SMTP_USER: ((smtp-user))
        SMTP_PASS: ((smtp-pass))
        SMTP_FROM: ((smtp-from))
        SMTP_CERT: ((smtp-cert))
        BRANDING_COMPANY_NAME: ((branding-company-name-development))
        IDP_PROVIDER_ORIGIN: ((idp-provider-origin-development))
        IDP_PROVIDER_URL: ((idp-provider-url-development))
        FLASK_SECRET_KEY: ((flask-secret-key-development))
        CF_API_URL: ((cf-api-url-development))
  - task: integration-tests
    image: general-task
    file: cg-uaa-extras-app/ci/integration_test.yml
    params:
        UAA_USER: uaa_extras_app
        UAA_SECRET: ((uaa-client-secret-development))
        UAA_URL: ((uaa-base-url-development))
        IDP_URL: ((idp-base-url-development))
        UAA_TARGET: ((uaa-target-url-development))
        EXTRAS_URL: ((uaa-extras-url-development))
        IDP_NAME: ((idp-provider-origin-development))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy cg-uaa-extras to development
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-staging
  plan:
  - get: general-task
  - get: dotgov-domain-data
    passed: [deploy-development]
    trigger: true
  - get: cg-uaa-extras-app
    passed: [deploy-development]
    trigger: true
  - task: integrate-repos
    image: general-task
    file: cg-uaa-extras-app/ci/integrate.yml
  - put: create-db
    resource: cf-cli-staging
    params:
      <<: *db-params
  - put: cloud-gov-staging
    params:
      manifest: cg-uaa-extras-app/manifest_uaaextra.yml
      path: uaa-extras-integrated
      vars:
        domain: fr-stage.cloud.gov
      environment_variables:
        UAA_BASE_URL: ((uaa-base-url-staging))
        UAA_CLIENT_ID: uaa_extras_app
        UAA_CLIENT_SECRET: ((uaa-client-secret-staging))
        UAA_VERIFY_TLS: "true"
        UAADB_CONNECTION_STRING: ((uaadb-connection-string-staging))
        SMTP_HOST: ((smtp-host))
        SMTP_PORT: ((smtp-port))
        SMTP_USER: ((smtp-user))
        SMTP_PASS: ((smtp-pass))
        SMTP_FROM: ((smtp-from))
        SMTP_CERT: ((smtp-cert))
        BRANDING_COMPANY_NAME: ((branding-company-name-staging))
        IDP_PROVIDER_ORIGIN: ((idp-provider-origin-staging))
        IDP_PROVIDER_URL: ((idp-provider-url-staging))
        FLASK_SECRET_KEY: ((flask-secret-key-staging))
        CF_API_URL: ((cf-api-url-staging))
  - task: integration-tests
    image: general-task
    file: cg-uaa-extras-app/ci/integration_test.yml
    params:
        UAA_USER: uaa_extras_app
        UAA_SECRET: ((uaa-client-secret-staging))
        UAA_URL: ((uaa-base-url-staging))
        IDP_URL: ((idp-base-url-staging))
        UAA_TARGET: ((uaa-target-url-staging))
        EXTRAS_URL: ((uaa-extras-url-staging))
        IDP_NAME: ((idp-provider-origin-staging))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy cg-uaa-extras to Staging
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-production
  plan:
  - get: general-task
  - get: dotgov-domain-data
    passed: [deploy-staging]
    trigger: true
  - get: cg-uaa-extras-app
    passed: [deploy-staging]
    trigger: true
  - task: integrate-repos
    image: general-task
    file: cg-uaa-extras-app/ci/integrate.yml
  - put: create-db
    resource: cf-cli-production
    params:
      <<: *db-params
  - put: cloud-gov-production
    params:
      manifest: cg-uaa-extras-app/manifest_production_fr_uaaextra.yml
      path: uaa-extras-integrated
      environment_variables:
        UAA_BASE_URL: ((uaa-base-url-production))
        UAA_CLIENT_ID: uaa_extras_app
        UAA_CLIENT_SECRET: ((uaa-client-secret-production))
        UAA_VERIFY_TLS: "true"
        UAADB_CONNECTION_STRING: ((uaadb-connection-string-production))
        SMTP_HOST: ((smtp-host))
        SMTP_PORT: ((smtp-port))
        SMTP_USER: ((smtp-user))
        SMTP_PASS: ((smtp-pass))
        SMTP_FROM: ((smtp-from))
        SMTP_CERT: ((smtp-cert))
        BRANDING_COMPANY_NAME: ((branding-company-name-production))
        IDP_PROVIDER_ORIGIN: ((idp-provider-origin-production))
        IDP_PROVIDER_URL: ((idp-provider-url-production))
        FLASK_SECRET_KEY: ((flask-secret-key-production))
        CF_API_URL: ((cf-api-url-production))
  on_failure:
    put: slack
    params:
      text: |
        :x: FAILED to deploy cg-uaa-extras to Production
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform'
      username: ((slack-username))
      icon_url: ((slack-icon-url))

resources:
- name: dotgov-domain-data
  type: git
  source:
    uri: https://github.com/cisagov/dotgov-data.git
    branch: main

- name: cg-uaa-extras-app
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: ((cg-uaa-extras-git-url))
    branch: ((cg-uaa-extras-git-branch))

- name: cloud-gov-development
  type: cf
  source:
    api: ((cf-api-url-development))
    username: ((cf-deploy-username-development))
    password: ((cf-deploy-password-development))
    organization: ((cf-organization))
    space: ((cf-space))
    skip_cert_check: false

- name: cloud-gov-staging
  type: cf
  source:
    api: ((cf-api-url-staging))
    username: ((cf-deploy-username-staging))
    password: ((cf-deploy-password-staging))
    organization: ((cf-organization))
    space: ((cf-space))
    skip_cert_check: false

- name: cloud-gov-production
  type: cf
  source:
    api: ((cf-api-url-production))
    username: ((cf-deploy-username-production))
    password: ((cf-deploy-password-production))
    organization: ((cf-organization))
    space: ((cf-space))
    skip_cert_check: false

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

- name: cf-cli-dev
  type: cf-cli-resource
  source:
    api: ((cf-api-url-development))
    username: ((cf-deploy-username-development))
    password: ((cf-deploy-password-development))
    org: ((cf-organization))
    space: ((cf-space))

- name: cf-cli-staging
  type: cf-cli-resource
  source:
    api: ((cf-api-url-staging))
    username: ((cf-deploy-username-staging))
    password: ((cf-deploy-password-staging))
    org: ((cf-organization))
    space: ((cf-space))

- name: cf-cli-production
  type: cf-cli-resource
  source:
    api: ((cf-api-url-production))
    username: ((cf-deploy-username-production))
    password: ((cf-deploy-password-production))
    org: ((cf-organization))
    space: ((cf-space))

- name: general-task
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: general-task
    aws_region: us-gov-west-1
    tag: latest

resource_types:
- name: registry-image
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: registry-image-resource
    aws_region: us-gov-west-1
    tag: latest

- name: slack-notification
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: slack-notification-resource
    aws_region: us-gov-west-1
    tag: latest

- name: cf-cli-resource
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: cf-cli-resource
    aws_region: us-gov-west-1
    tag: latest

- name: git
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: git-resource
    aws_region: us-gov-west-1
    tag: latest

- name: cf
  type: registry-image
  source:
    aws_access_key_id: ((ecr_aws_key))
    aws_secret_access_key: ((ecr_aws_secret))
    repository: cf-resource
    aws_region: us-gov-west-1
    tag: latest
